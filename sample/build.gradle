apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: 'AndResGuard'

android {
    signingConfigs {
        release {
            storeFile file("sample.jks")
            storePassword "123456"
            keyAlias "sample"
            keyPassword "123456"
            v2SigningEnabled true
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "top.xuqingquan.sample"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner rootProject.ext.android.AndroidJUnitRunner
        flavorDimensions 'default'
        multiDexEnabled true
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            minifyEnabled false
//            zipAlignEnabled true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            multiDexKeepProguard file('multidex-config.pro')
        }
        debug {
            signingConfig signingConfigs.release
            multiDexKeepProguard file('multidex-config.pro')
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'//说明so的路径为该libs路径，关联所有so文件
        }
    }
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
    }
    //如果有用到kapt添加如下配置
    kapt {
        useBuildCache = true
        javacOptions {
            option("-Xmaxerrs", 500)
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    //test
    testImplementation rootProject.ext.deps.junit
    androidTestImplementation rootProject.ext.deps.espresso_core
    implementation project(path: ':core')
//    implementation 'top.xuqingquan:scaffold:2.0.3'
    implementation 'top.xuqingquan:web:3.0.5_lite'
    implementation rootProject.ext.deps.multidex
    implementation rootProject.ext.deps.paging
    implementation rootProject.ext.deps.room
    implementation rootProject.ext.deps.BRVAH
    implementation 'com.swift.sandhook:hooklib:4.2.0'
    // need for android 11
    implementation 'com.swift.sandhook:nativehook:4.2.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.31'
    implementation 'com.tencent:mmkv-static:1.2.2'
}
//andResGuard {
//    // mappingFile = file("./resource_mapping.txt")
//    mappingFile = null
//    use7zip = true
//    useSign = true
//    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
//    keepRoot = false
//    // 设置这个值，会把arsc name列混淆成相同的名字，减少string常量池的大小
//    fixedResName = "arg"
//    // 打开这个开关会合并所有哈希值相同的资源，但请不要过度依赖这个功能去除去冗余资源
//    mergeDuplicatedRes = true
//    whiteList = [
//    ]
//    compressFilePattern = [
//    ]
//    sevenzip {
//        artifact = 'com.tencent.mm:SevenZip:1.2.17'
//        //path = "/usr/local/bin/7za"
//    }
//
//    /**
//     * 可选： 如果不设置则会默认覆盖assemble输出的apk
//     **/
//    // finalApkBackupPath = "${project.rootDir}/final.apk"
//
//    /**
//     * 可选: 指定v1签名时生成jar文件的摘要算法
//     * 默认值为“SHA-1”
//     **/
//    // digestalg = "SHA-256"
//}

